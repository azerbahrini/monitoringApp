function cov_1r7m96qcep(){var path="/home/azer/Desktop/jenkins/app/monitoringApp/services/host/updateHost.js";var hash="276dbb89d7e3962cec6ca656448b702fc4731d16";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azer/Desktop/jenkins/app/monitoringApp/services/host/updateHost.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:41}},"1":{start:{line:2,column:15},end:{line:2,column:45}},"2":{start:{line:4,column:0},end:{line:33,column:2}},"3":{start:{line:5,column:2},end:{line:32,column:3}},"4":{start:{line:6,column:24},end:{line:15,column:13}},"5":{start:{line:17,column:4},end:{line:23,column:5}},"6":{start:{line:18,column:6},end:{line:22,column:8}},"7":{start:{line:25,column:4},end:{line:28,column:6}},"8":{start:{line:30,column:4},end:{line:30,column:40}},"9":{start:{line:31,column:4},end:{line:31,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:45},end:{line:33,column:1}},line:4}},branchMap:{"0":{loc:{start:{line:17,column:4},end:{line:23,column:5}},type:"if",locations:[{start:{line:17,column:4},end:{line:23,column:5}},{start:{line:17,column:4},end:{line:23,column:5}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"276dbb89d7e3962cec6ca656448b702fc4731d16"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1r7m96qcep=function(){return actualCoverage;};}return actualCoverage;}cov_1r7m96qcep();const Host=(cov_1r7m96qcep().s[0]++,require("../../models/Host"));const logger=(cov_1r7m96qcep().s[1]++,require("../../config/logger"));cov_1r7m96qcep().s[2]++;module.exports=async(hostId,hostData)=>{cov_1r7m96qcep().f[0]++;cov_1r7m96qcep().s[3]++;try{const updatedhost=(cov_1r7m96qcep().s[4]++,await Host.findOneAndUpdate({_id:hostId,isActive:true},hostData,{new:true}).lean().exec());cov_1r7m96qcep().s[5]++;if(!updatedhost){cov_1r7m96qcep().b[0][0]++;cov_1r7m96qcep().s[6]++;return{status:"error",err:{message:"No host matched this criteria !"},statusCode:404};}else{cov_1r7m96qcep().b[0][1]++;}cov_1r7m96qcep().s[7]++;return{status:"success",data:updatedhost};}catch(err){cov_1r7m96qcep().s[8]++;logger.error("Update Error :",err);cov_1r7m96qcep().s[9]++;return{err,status:"error"};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZUhvc3QuanMiXSwibmFtZXMiOlsiSG9zdCIsInJlcXVpcmUiLCJsb2dnZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiaG9zdElkIiwiaG9zdERhdGEiLCJ1cGRhdGVkaG9zdCIsImZpbmRPbmVBbmRVcGRhdGUiLCJfaWQiLCJpc0FjdGl2ZSIsIm5ldyIsImxlYW4iLCJleGVjIiwic3RhdHVzIiwiZXJyIiwibWVzc2FnZSIsInN0YXR1c0NvZGUiLCJkYXRhIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJnakRBZVk7MkZBZlosS0FBTUEsQ0FBQUEsSUFBSSwwQkFBR0MsT0FBTyxDQUFDLG1CQUFELENBQVYsQ0FBVixDQUNBLEtBQU1DLENBQUFBLE1BQU0sMEJBQUdELE9BQU8sQ0FBQyxxQkFBRCxDQUFWLENBQVosQyx3QkFFQUUsTUFBTSxDQUFDQyxPQUFQLENBQWlCLE1BQU9DLE1BQVAsQ0FBZUMsUUFBZixHQUE0QixpREFDM0MsR0FBSSxDQUNGLEtBQU1DLENBQUFBLFdBQVcsMEJBQUcsS0FBTVAsQ0FBQUEsSUFBSSxDQUFDUSxnQkFBTCxDQUN4QixDQUNFQyxHQUFHLENBQUVKLE1BRFAsQ0FFRUssUUFBUSxDQUFFLElBRlosQ0FEd0IsQ0FLeEJKLFFBTHdCLENBTXhCLENBQUVLLEdBQUcsQ0FBRSxJQUFQLENBTndCLEVBUXZCQyxJQVJ1QixHQVN2QkMsSUFUdUIsRUFBVCxDQUFqQixDQURFLHdCQVlGLEdBQUksQ0FBQ04sV0FBTCxDQUFrQixvREFDaEIsTUFBTyxDQUNMTyxNQUFNLENBQUUsT0FESCxDQUVMQyxHQUFHLENBQUUsQ0FBRUMsT0FBTyxDQUFFLGlDQUFYLENBRkEsQ0FHTEMsVUFBVSxDQUFFLEdBSFAsQ0FBUCxDQUtELENBTkQsaUNBWkUsd0JBb0JGLE1BQU8sQ0FDTEgsTUFBTSxDQUFFLFNBREgsQ0FFTEksSUFBSSxDQUFFWCxXQUZELENBQVAsQ0FJRCxDQUFDLE1BQU9RLEdBQVAsQ0FBWSx5QkFDWmIsTUFBTSxDQUFDaUIsS0FBUCxDQUFhLGdCQUFiLENBQStCSixHQUEvQixFQURZLHdCQUVaLE1BQU8sQ0FBRUEsR0FBRixDQUFPRCxNQUFNLENBQUUsT0FBZixDQUFQLENBQ0QsQ0FDRixDQTdCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEhvc3QgPSByZXF1aXJlKFwiLi4vLi4vbW9kZWxzL0hvc3RcIik7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKFwiLi4vLi4vY29uZmlnL2xvZ2dlclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoaG9zdElkLCBob3N0RGF0YSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHVwZGF0ZWRob3N0ID0gYXdhaXQgSG9zdC5maW5kT25lQW5kVXBkYXRlKFxuICAgICAge1xuICAgICAgICBfaWQ6IGhvc3RJZCxcbiAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICB9LFxuICAgICAgaG9zdERhdGEsXG4gICAgICB7IG5ldzogdHJ1ZSB9XG4gICAgKVxuICAgICAgLmxlYW4oKVxuICAgICAgLmV4ZWMoKTtcblxuICAgIGlmICghdXBkYXRlZGhvc3QpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXR1czogXCJlcnJvclwiLFxuICAgICAgICBlcnI6IHsgbWVzc2FnZTogXCJObyBob3N0IG1hdGNoZWQgdGhpcyBjcml0ZXJpYSAhXCIgfSxcbiAgICAgICAgc3RhdHVzQ29kZTogNDA0LFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiBcInN1Y2Nlc3NcIixcbiAgICAgIGRhdGE6IHVwZGF0ZWRob3N0LFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGxvZ2dlci5lcnJvcihcIlVwZGF0ZSBFcnJvciA6XCIsIGVycik7XG4gICAgcmV0dXJuIHsgZXJyLCBzdGF0dXM6IFwiZXJyb3JcIiB9O1xuICB9XG59O1xuIl19