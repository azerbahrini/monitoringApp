function cov_smgslrd17(){var path="/home/azer/Desktop/jenkins/app/monitoringApp/kafka/kafkaPoducer.js";var hash="b719d91bc161fbfd2968626debe110c73c11c976";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azer/Desktop/jenkins/app/monitoringApp/kafka/kafkaPoducer.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:36}},"1":{start:{line:2,column:15},end:{line:2,column:42}},"2":{start:{line:4,column:14},end:{line:7,column:2}},"3":{start:{line:9,column:17},end:{line:9,column:33}},"4":{start:{line:11,column:17},end:{line:24,column:1}},"5":{start:{line:12,column:4},end:{line:23,column:5}},"6":{start:{line:13,column:8},end:{line:13,column:32}},"7":{start:{line:14,column:8},end:{line:19,column:10}},"8":{start:{line:20,column:8},end:{line:20,column:42}},"9":{start:{line:22,column:8},end:{line:22,column:46}},"10":{start:{line:26,column:28},end:{line:39,column:1}},"11":{start:{line:27,column:4},end:{line:38,column:5}},"12":{start:{line:28,column:8},end:{line:28,column:32}},"13":{start:{line:29,column:8},end:{line:34,column:10}},"14":{start:{line:35,column:8},end:{line:35,column:63}},"15":{start:{line:37,column:8},end:{line:37,column:67}},"16":{start:{line:41,column:17},end:{line:55,column:1}},"17":{start:{line:42,column:4},end:{line:54,column:5}},"18":{start:{line:43,column:8},end:{line:43,column:60}},"19":{start:{line:44,column:8},end:{line:44,column:32}},"20":{start:{line:45,column:8},end:{line:50,column:10}},"21":{start:{line:51,column:8},end:{line:51,column:42}},"22":{start:{line:53,column:8},end:{line:53,column:46}},"23":{start:{line:56,column:0},end:{line:60,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:17},end:{line:11,column:18}},loc:{start:{line:11,column:37},end:{line:24,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:54},end:{line:39,column:1}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:17},end:{line:41,column:18}},loc:{start:{line:41,column:37},end:{line:55,column:1}},line:41}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b719d91bc161fbfd2968626debe110c73c11c976"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_smgslrd17=function(){return actualCoverage;};}return actualCoverage;}cov_smgslrd17();const{Kafka}=(cov_smgslrd17().s[0]++,require('kafkajs'));const logger=(cov_smgslrd17().s[1]++,require('../config/logger'));const kafka=(cov_smgslrd17().s[2]++,new Kafka({clientId:'coreProducerClient',brokers:[process.env.REMOTE_KAFKA_SERVER]}));const producer=(cov_smgslrd17().s[3]++,kafka.producer());cov_smgslrd17().s[4]++;const sendMail=async mailData=>{cov_smgslrd17().f[0]++;cov_smgslrd17().s[5]++;try{cov_smgslrd17().s[6]++;await producer.connect();cov_smgslrd17().s[7]++;await producer.send({topic:'mailData',messages:[{value:JSON.stringify(mailData)}]});cov_smgslrd17().s[8]++;console.log('send Mail Success !');}catch(error){cov_smgslrd17().s[9]++;console.log('send Mail Error',error);}};cov_smgslrd17().s[10]++;const archiveNotification=async notifReference=>{cov_smgslrd17().f[1]++;cov_smgslrd17().s[11]++;try{cov_smgslrd17().s[12]++;await producer.connect();cov_smgslrd17().s[13]++;await producer.send({topic:'notification_archive',messages:[{value:JSON.stringify(notifReference)}]});cov_smgslrd17().s[14]++;console.log('sending notification Reference Success !');}catch(error){cov_smgslrd17().s[15]++;console.log('sending notification Reference Error',error);}};cov_smgslrd17().s[16]++;const sendInfo=async infoData=>{cov_smgslrd17().f[2]++;cov_smgslrd17().s[17]++;try{cov_smgslrd17().s[18]++;logger.debug('Before sending inside the producer !');cov_smgslrd17().s[19]++;await producer.connect();cov_smgslrd17().s[20]++;await producer.send({topic:'info',messages:[{value:JSON.stringify(infoData)}]});cov_smgslrd17().s[21]++;console.log('send Info Success !');}catch(error){cov_smgslrd17().s[22]++;console.log('send Info Error',error);}};cov_smgslrd17().s[23]++;module.exports={sendMail,archiveNotification,sendInfo};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImthZmthUG9kdWNlci5qcyJdLCJuYW1lcyI6WyJLYWZrYSIsInJlcXVpcmUiLCJsb2dnZXIiLCJrYWZrYSIsImNsaWVudElkIiwiYnJva2VycyIsInByb2Nlc3MiLCJlbnYiLCJSRU1PVEVfS0FGS0FfU0VSVkVSIiwicHJvZHVjZXIiLCJzZW5kTWFpbCIsIm1haWxEYXRhIiwiY29ubmVjdCIsInNlbmQiLCJ0b3BpYyIsIm1lc3NhZ2VzIiwidmFsdWUiLCJKU09OIiwic3RyaW5naWZ5IiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiYXJjaGl2ZU5vdGlmaWNhdGlvbiIsIm5vdGlmUmVmZXJlbmNlIiwic2VuZEluZm8iLCJpbmZvRGF0YSIsImRlYnVnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6InFnRkFlWTt5RkFmWixLQUFNLENBQUVBLEtBQUYsMEJBQVlDLE9BQU8sQ0FBQyxTQUFELENBQW5CLENBQU4sQ0FDQSxLQUFNQyxDQUFBQSxNQUFNLHlCQUFHRCxPQUFPLENBQUMsa0JBQUQsQ0FBVixDQUFaLENBRUEsS0FBTUUsQ0FBQUEsS0FBSyx5QkFBRyxHQUFJSCxDQUFBQSxLQUFKLENBQVUsQ0FDcEJJLFFBQVEsQ0FBRSxvQkFEVSxDQUVwQkMsT0FBTyxDQUFFLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxtQkFBYixDQUZXLENBQVYsQ0FBSCxDQUFYLENBS0EsS0FBTUMsQ0FBQUEsUUFBUSx5QkFBR04sS0FBSyxDQUFDTSxRQUFOLEVBQUgsQ0FBZCxDLHVCQUVBLEtBQU1DLENBQUFBLFFBQVEsQ0FBRyxLQUFPQyxDQUFBQSxRQUFQLEVBQW9CLCtDQUNqQyxHQUFJLHdCQUNBLEtBQU1GLENBQUFBLFFBQVEsQ0FBQ0csT0FBVCxFQUFOLENBREEsdUJBRUEsS0FBTUgsQ0FBQUEsUUFBUSxDQUFDSSxJQUFULENBQWMsQ0FDaEJDLEtBQUssQ0FBRSxVQURTLENBRWhCQyxRQUFRLENBQUUsQ0FDTixDQUFFQyxLQUFLLENBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlUCxRQUFmLENBQVQsQ0FETSxDQUZNLENBQWQsQ0FBTixDQUZBLHVCQVFBUSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWixFQUNILENBQUMsTUFBT0MsS0FBUCxDQUFjLHdCQUNaRixPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixDQUErQkMsS0FBL0IsRUFDSCxDQUNKLENBYkQsQyx3QkFlQSxLQUFNQyxDQUFBQSxtQkFBbUIsQ0FBRyxLQUFPQyxDQUFBQSxjQUFQLEVBQTBCLGdEQUNsRCxHQUFJLHlCQUNBLEtBQU1kLENBQUFBLFFBQVEsQ0FBQ0csT0FBVCxFQUFOLENBREEsd0JBRUEsS0FBTUgsQ0FBQUEsUUFBUSxDQUFDSSxJQUFULENBQWMsQ0FDaEJDLEtBQUssQ0FBRSxzQkFEUyxDQUVoQkMsUUFBUSxDQUFFLENBQ04sQ0FBRUMsS0FBSyxDQUFFQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUssY0FBZixDQUFULENBRE0sQ0FGTSxDQUFkLENBQU4sQ0FGQSx3QkFRQUosT0FBTyxDQUFDQyxHQUFSLENBQVksMENBQVosRUFDSCxDQUFDLE1BQU9DLEtBQVAsQ0FBYyx5QkFDWkYsT0FBTyxDQUFDQyxHQUFSLENBQVksc0NBQVosQ0FBb0RDLEtBQXBELEVBQ0gsQ0FDSixDQWJELEMsd0JBZUEsS0FBTUcsQ0FBQUEsUUFBUSxDQUFHLEtBQU9DLENBQUFBLFFBQVAsRUFBb0IsZ0RBQ2pDLEdBQUkseUJBQ0F2QixNQUFNLENBQUN3QixLQUFQLENBQWEsc0NBQWIsRUFEQSx3QkFFQSxLQUFNakIsQ0FBQUEsUUFBUSxDQUFDRyxPQUFULEVBQU4sQ0FGQSx3QkFHQSxLQUFNSCxDQUFBQSxRQUFRLENBQUNJLElBQVQsQ0FBYyxDQUNoQkMsS0FBSyxDQUFFLE1BRFMsQ0FFaEJDLFFBQVEsQ0FBRSxDQUNOLENBQUVDLEtBQUssQ0FBRUMsSUFBSSxDQUFDQyxTQUFMLENBQWVPLFFBQWYsQ0FBVCxDQURNLENBRk0sQ0FBZCxDQUFOLENBSEEsd0JBU0FOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaLEVBQ0gsQ0FBQyxNQUFPQyxLQUFQLENBQWMseUJBQ1pGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaLENBQStCQyxLQUEvQixFQUNILENBQ0osQ0FkRCxDLHdCQWVBTSxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsQ0FDYmxCLFFBRGEsQ0FFYlksbUJBRmEsQ0FHYkUsUUFIYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgS2Fma2EgfSA9IHJlcXVpcmUoJ2thZmthanMnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4uL2NvbmZpZy9sb2dnZXInKTtcblxuY29uc3Qga2Fma2EgPSBuZXcgS2Fma2Eoe1xuICAgIGNsaWVudElkOiAnY29yZVByb2R1Y2VyQ2xpZW50JyxcbiAgICBicm9rZXJzOiBbcHJvY2Vzcy5lbnYuUkVNT1RFX0tBRktBX1NFUlZFUl1cbn0pXG5cbmNvbnN0IHByb2R1Y2VyID0ga2Fma2EucHJvZHVjZXIoKVxuXG5jb25zdCBzZW5kTWFpbCA9IGFzeW5jIChtYWlsRGF0YSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHByb2R1Y2VyLmNvbm5lY3QoKVxuICAgICAgICBhd2FpdCBwcm9kdWNlci5zZW5kKHtcbiAgICAgICAgICAgIHRvcGljOiAnbWFpbERhdGEnLFxuICAgICAgICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICB7IHZhbHVlOiBKU09OLnN0cmluZ2lmeShtYWlsRGF0YSkgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKCdzZW5kIE1haWwgU3VjY2VzcyAhJylcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZygnc2VuZCBNYWlsIEVycm9yJywgZXJyb3IpO1xuICAgIH1cbn1cblxuY29uc3QgYXJjaGl2ZU5vdGlmaWNhdGlvbiA9IGFzeW5jIChub3RpZlJlZmVyZW5jZSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHByb2R1Y2VyLmNvbm5lY3QoKVxuICAgICAgICBhd2FpdCBwcm9kdWNlci5zZW5kKHtcbiAgICAgICAgICAgIHRvcGljOiAnbm90aWZpY2F0aW9uX2FyY2hpdmUnLFxuICAgICAgICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICB7IHZhbHVlOiBKU09OLnN0cmluZ2lmeShub3RpZlJlZmVyZW5jZSkgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKCdzZW5kaW5nIG5vdGlmaWNhdGlvbiBSZWZlcmVuY2UgU3VjY2VzcyAhJylcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZygnc2VuZGluZyBub3RpZmljYXRpb24gUmVmZXJlbmNlIEVycm9yJywgZXJyb3IpO1xuICAgIH1cbn1cblxuY29uc3Qgc2VuZEluZm8gPSBhc3luYyAoaW5mb0RhdGEpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBsb2dnZXIuZGVidWcoJ0JlZm9yZSBzZW5kaW5nIGluc2lkZSB0aGUgcHJvZHVjZXIgIScpXG4gICAgICAgIGF3YWl0IHByb2R1Y2VyLmNvbm5lY3QoKVxuICAgICAgICBhd2FpdCBwcm9kdWNlci5zZW5kKHtcbiAgICAgICAgICAgIHRvcGljOiAnaW5mbycsXG4gICAgICAgICAgICBtZXNzYWdlczogW1xuICAgICAgICAgICAgICAgIHsgdmFsdWU6IEpTT04uc3RyaW5naWZ5KGluZm9EYXRhKSB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSlcbiAgICAgICAgY29uc29sZS5sb2coJ3NlbmQgSW5mbyBTdWNjZXNzICEnKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzZW5kIEluZm8gRXJyb3InLCBlcnJvcik7XG4gICAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgc2VuZE1haWwsXG4gICAgYXJjaGl2ZU5vdGlmaWNhdGlvbixcbiAgICBzZW5kSW5mb1xufVxuIl19