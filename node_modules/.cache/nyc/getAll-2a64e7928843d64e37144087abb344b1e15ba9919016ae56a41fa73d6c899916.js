function cov_neoijtvec(){var path="/home/azer/Desktop/jenkins/app/monitoringApp/services/level/getAll.js";var hash="bd87a2f003c1cdc154b4d38f721697a602bc1ba3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azer/Desktop/jenkins/app/monitoringApp/services/level/getAll.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:43}},"1":{start:{line:2,column:0},end:{line:21,column:2}},"2":{start:{line:3,column:2},end:{line:20,column:3}},"3":{start:{line:4,column:4},end:{line:7,column:5}},"4":{start:{line:9,column:17},end:{line:9,column:50}},"5":{start:{line:10,column:4},end:{line:13,column:6}},"6":{start:{line:15,column:4},end:{line:15,column:23}},"7":{start:{line:16,column:4},end:{line:19,column:6}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:17},end:{line:2,column:18}},loc:{start:{line:2,column:39},end:{line:21,column:1}},line:2}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"bd87a2f003c1cdc154b4d38f721697a602bc1ba3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_neoijtvec=function(){return actualCoverage;};}return actualCoverage;}cov_neoijtvec();const Level=(cov_neoijtvec().s[0]++,require("../../models/Level"));cov_neoijtvec().s[1]++;module.exports=async(page,size)=>{cov_neoijtvec().f[0]++;cov_neoijtvec().s[2]++;try{cov_neoijtvec().s[3]++;options={offset:page*size,limit:size};// const docs = await Level.find({}).lean().exec();
const docs=(cov_neoijtvec().s[4]++,await Level.paginate({},options));cov_neoijtvec().s[5]++;return{data:docs,status:"success"};}catch(err){cov_neoijtvec().s[6]++;console.error(err);cov_neoijtvec().s[7]++;return{err,status:"error"};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEFsbC5qcyJdLCJuYW1lcyI6WyJMZXZlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicGFnZSIsInNpemUiLCJvcHRpb25zIiwib2Zmc2V0IiwibGltaXQiLCJkb2NzIiwicGFnaW5hdGUiLCJkYXRhIiwic3RhdHVzIiwiZXJyIiwiY29uc29sZSIsImVycm9yIl0sIm1hcHBpbmdzIjoidXVDQWVZO3lGQWZaLEtBQU1BLENBQUFBLEtBQUsseUJBQUdDLE9BQU8sQ0FBQyxvQkFBRCxDQUFWLENBQVgsQyx1QkFDQUMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLE1BQU9DLElBQVAsQ0FBYUMsSUFBYixHQUFzQiwrQ0FDckMsR0FBSSx3QkFDRkMsT0FBTyxDQUFHLENBQ1JDLE1BQU0sQ0FBRUgsSUFBSSxDQUFHQyxJQURQLENBRVJHLEtBQUssQ0FBRUgsSUFGQyxDQUFWLENBSUE7QUFDQSxLQUFNSSxDQUFBQSxJQUFJLHlCQUFHLEtBQU1ULENBQUFBLEtBQUssQ0FBQ1UsUUFBTixDQUFlLEVBQWYsQ0FBbUJKLE9BQW5CLENBQVQsQ0FBVixDQU5FLHVCQU9GLE1BQU8sQ0FDTEssSUFBSSxDQUFFRixJQURELENBRUxHLE1BQU0sQ0FBRSxTQUZILENBQVAsQ0FJRCxDQUFDLE1BQU9DLEdBQVAsQ0FBWSx3QkFDWkMsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQWQsRUFEWSx1QkFFWixNQUFPLENBQ0xBLEdBREssQ0FFTEQsTUFBTSxDQUFFLE9BRkgsQ0FBUCxDQUlELENBQ0YsQ0FuQkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBMZXZlbCA9IHJlcXVpcmUoXCIuLi8uLi9tb2RlbHMvTGV2ZWxcIik7XG5tb2R1bGUuZXhwb3J0cyA9IGFzeW5jIChwYWdlLCBzaXplKSA9PiB7XG4gIHRyeSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIG9mZnNldDogcGFnZSAqIHNpemUsXG4gICAgICBsaW1pdDogc2l6ZVxuICAgIH1cbiAgICAvLyBjb25zdCBkb2NzID0gYXdhaXQgTGV2ZWwuZmluZCh7fSkubGVhbigpLmV4ZWMoKTtcbiAgICBjb25zdCBkb2NzID0gYXdhaXQgTGV2ZWwucGFnaW5hdGUoe30sIG9wdGlvbnMpXG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGE6IGRvY3MsXG4gICAgICBzdGF0dXM6IFwic3VjY2Vzc1wiLFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICByZXR1cm4ge1xuICAgICAgZXJyLFxuICAgICAgc3RhdHVzOiBcImVycm9yXCIsXG4gICAgfTtcbiAgfVxufTtcbiJdfQ==