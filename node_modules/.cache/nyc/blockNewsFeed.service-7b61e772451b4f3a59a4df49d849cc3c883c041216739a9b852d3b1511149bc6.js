function cov_canq9hyd6(){var path="/home/azer/Desktop/jenkins/app/monitoringApp/services/newsFeed/blockNewsFeed.service.js";var hash="50157ceb1ff904df0dbc9c3a67731f9f303b6abd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azer/Desktop/jenkins/app/monitoringApp/services/newsFeed/blockNewsFeed.service.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:45}},"1":{start:{line:2,column:28},end:{line:2,column:75}},"2":{start:{line:4,column:0},end:{line:27,column:2}},"3":{start:{line:5,column:4},end:{line:26,column:5}},"4":{start:{line:6,column:20},end:{line:12,column:19}},"5":{start:{line:13,column:8},end:{line:15,column:9}},"6":{start:{line:14,column:12},end:{line:14,column:91}},"7":{start:{line:16,column:8},end:{line:22,column:13}},"8":{start:{line:23,column:8},end:{line:23,column:65}},"9":{start:{line:25,column:8},end:{line:25,column:57}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:31},end:{line:27,column:1}},line:4}},branchMap:{"0":{loc:{start:{line:13,column:8},end:{line:15,column:9}},type:"if",locations:[{start:{line:13,column:8},end:{line:15,column:9}},{start:{line:13,column:8},end:{line:15,column:9}}],line:13}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"50157ceb1ff904df0dbc9c3a67731f9f303b6abd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_canq9hyd6=function(){return actualCoverage;};}return actualCoverage;}cov_canq9hyd6();const News=(cov_canq9hyd6().s[0]++,require('../../models/NewsFeed'));const notificationService=(cov_canq9hyd6().s[1]++,require('../../kafka/notificationServiceKafka'));cov_canq9hyd6().s[2]++;module.exports=async id=>{cov_canq9hyd6().f[0]++;cov_canq9hyd6().s[3]++;try{const doc=(cov_canq9hyd6().s[4]++,await News.findOneAndUpdate({_id:id},{isBlocked:true},{new:true}).lean().exec());cov_canq9hyd6().s[5]++;if(!doc){cov_canq9hyd6().b[0][0]++;cov_canq9hyd6().s[6]++;return{err:{message:'post not found'},status:'error',statusCode:404};}else{cov_canq9hyd6().b[0][1]++;}cov_canq9hyd6().s[7]++;await notificationService.newsFeedNotif({key:'NewsFeed',data:{feed:doc,message:'Newsfeed blocked'}});cov_canq9hyd6().s[8]++;return{data:doc,status:'success',statusCode:200};}catch(err){cov_canq9hyd6().s[9]++;return{err,status:'error',statusCode:400};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2NrTmV3c0ZlZWQuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJOZXdzIiwicmVxdWlyZSIsIm5vdGlmaWNhdGlvblNlcnZpY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiaWQiLCJkb2MiLCJmaW5kT25lQW5kVXBkYXRlIiwiX2lkIiwiaXNCbG9ja2VkIiwibmV3IiwibGVhbiIsImV4ZWMiLCJlcnIiLCJtZXNzYWdlIiwic3RhdHVzIiwic3RhdHVzQ29kZSIsIm5ld3NGZWVkTm90aWYiLCJrZXkiLCJkYXRhIiwiZmVlZCJdLCJtYXBwaW5ncyI6ImdsREFlWTt5RkFmWixLQUFNQSxDQUFBQSxJQUFJLHlCQUFHQyxPQUFPLENBQUMsdUJBQUQsQ0FBVixDQUFWLENBQ0EsS0FBTUMsQ0FBQUEsbUJBQW1CLHlCQUFHRCxPQUFPLENBQUMsc0NBQUQsQ0FBVixDQUF6QixDLHVCQUVBRSxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsS0FBT0MsQ0FBQUEsRUFBUCxFQUFjLCtDQUMzQixHQUFJLENBQ0EsS0FBTUMsQ0FBQUEsR0FBRyx5QkFBRyxLQUFNTixDQUFBQSxJQUFJLENBQUNPLGdCQUFMLENBQ2QsQ0FBRUMsR0FBRyxDQUFFSCxFQUFQLENBRGMsQ0FFZCxDQUFFSSxTQUFTLENBQUUsSUFBYixDQUZjLENBR2QsQ0FBRUMsR0FBRyxDQUFFLElBQVAsQ0FIYyxFQUtiQyxJQUxhLEdBTWJDLElBTmEsRUFBVCxDQUFULENBREEsdUJBUUEsR0FBSSxDQUFDTixHQUFMLENBQVUsa0RBQ04sTUFBTyxDQUFFTyxHQUFHLENBQUUsQ0FBRUMsT0FBTyxDQUFFLGdCQUFYLENBQVAsQ0FBc0NDLE1BQU0sQ0FBRSxPQUE5QyxDQUF1REMsVUFBVSxDQUFFLEdBQW5FLENBQVAsQ0FDSCxDQUZELGdDQVJBLHVCQVdBLEtBQU1kLENBQUFBLG1CQUFtQixDQUFDZSxhQUFwQixDQUFrQyxDQUNwQ0MsR0FBRyxDQUFFLFVBRCtCLENBRXBDQyxJQUFJLENBQUUsQ0FDSkMsSUFBSSxDQUFFZCxHQURGLENBRUpRLE9BQU8sQ0FBRSxrQkFGTCxDQUY4QixDQUFsQyxDQUFOLENBWEEsdUJBa0JBLE1BQU8sQ0FBRUssSUFBSSxDQUFFYixHQUFSLENBQWFTLE1BQU0sQ0FBRSxTQUFyQixDQUFnQ0MsVUFBVSxDQUFFLEdBQTVDLENBQVAsQ0FDSCxDQUFDLE1BQU9ILEdBQVAsQ0FBWSx3QkFDVixNQUFPLENBQUVBLEdBQUYsQ0FBT0UsTUFBTSxDQUFFLE9BQWYsQ0FBd0JDLFVBQVUsQ0FBRSxHQUFwQyxDQUFQLENBQ0gsQ0FDSixDQXZCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE5ld3MgPSByZXF1aXJlKCcuLi8uLi9tb2RlbHMvTmV3c0ZlZWQnKTtcbmNvbnN0IG5vdGlmaWNhdGlvblNlcnZpY2UgPSByZXF1aXJlKCcuLi8uLi9rYWZrYS9ub3RpZmljYXRpb25TZXJ2aWNlS2Fma2EnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoaWQpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBkb2MgPSBhd2FpdCBOZXdzLmZpbmRPbmVBbmRVcGRhdGUoXG4gICAgICAgICAgICB7IF9pZDogaWQgfSxcbiAgICAgICAgICAgIHsgaXNCbG9ja2VkOiB0cnVlIH0sXG4gICAgICAgICAgICB7IG5ldzogdHJ1ZSB9XG4gICAgICAgICAgKVxuICAgICAgICAgICAgLmxlYW4oKVxuICAgICAgICAgICAgLmV4ZWMoKTtcbiAgICAgICAgaWYgKCFkb2MpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGVycjogeyBtZXNzYWdlOiAncG9zdCBub3QgZm91bmQnIH0sIHN0YXR1czogJ2Vycm9yJywgc3RhdHVzQ29kZTogNDA0fTtcbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBub3RpZmljYXRpb25TZXJ2aWNlLm5ld3NGZWVkTm90aWYoe1xuICAgICAgICAgICAga2V5OiAnTmV3c0ZlZWQnLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICBmZWVkOiBkb2MsXG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdOZXdzZmVlZCBibG9ja2VkJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4geyBkYXRhOiBkb2MsIHN0YXR1czogJ3N1Y2Nlc3MnLCBzdGF0dXNDb2RlOiAyMDAgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHsgZXJyLCBzdGF0dXM6ICdlcnJvcicsIHN0YXR1c0NvZGU6IDQwMCB9O1xuICAgIH1cbn07Il19