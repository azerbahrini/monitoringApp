function cov_12kshufilw(){var path="/home/azer/Desktop/jenkins/app/monitoringApp/utils/toBase64.js";var hash="d3898417bea6cceb1e4b8de59c1fb7956a50349f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azer/Desktop/jenkins/app/monitoringApp/utils/toBase64.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:24}},"1":{start:{line:4,column:0},end:{line:15,column:1}},"2":{start:{line:5,column:4},end:{line:14,column:5}},"3":{start:{line:7,column:19},end:{line:7,column:40}},"4":{start:{line:9,column:18},end:{line:9,column:43}},"5":{start:{line:10,column:4},end:{line:10,column:45}},"6":{start:{line:13,column:8},end:{line:13,column:45}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:27},end:{line:15,column:1}},line:4}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d3898417bea6cceb1e4b8de59c1fb7956a50349f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_12kshufilw=function(){return actualCoverage;};}return actualCoverage;}cov_12kshufilw();const fs=(cov_12kshufilw().s[0]++,require('fs'));// Function to encode file data to base64 encoded string
cov_12kshufilw().s[1]++;module.exports=file=>{cov_12kshufilw().f[0]++;cov_12kshufilw().s[2]++;try{// Read binary data
const bitmap=(cov_12kshufilw().s[3]++,fs.readFileSync(file));// Convert binary data to base64 encoded string
const file64=(cov_12kshufilw().s[4]++,bitmap.toString('base64'));cov_12kshufilw().s[5]++;return{status:'success',data:file64};}catch(err){cov_12kshufilw().s[6]++;return{err:err,status:'error'};}};// To display
//<img src={`data:image/jpeg;base64,${data}`} />
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvQmFzZTY0LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaWxlIiwiYml0bWFwIiwicmVhZEZpbGVTeW5jIiwiZmlsZTY0IiwidG9TdHJpbmciLCJzdGF0dXMiLCJkYXRhIiwiZXJyIl0sIm1hcHBpbmdzIjoiaXFDQWVZOzJGQWZaLEtBQU1BLENBQUFBLEVBQUUsMEJBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVYsQ0FBUixDQUVBO3dCQUNBQyxNQUFNLENBQUNDLE9BQVAsQ0FBa0JDLElBQUQsRUFBVSxpREFDdkIsR0FBSSxDQUNKO0FBQ0EsS0FBTUMsQ0FBQUEsTUFBTSwwQkFBR0wsRUFBRSxDQUFDTSxZQUFILENBQWdCRixJQUFoQixDQUFILENBQVosQ0FDQTtBQUNBLEtBQU1HLENBQUFBLE1BQU0sMEJBQUVGLE1BQU0sQ0FBQ0csUUFBUCxDQUFnQixRQUFoQixDQUFGLENBQVosQ0FKSSx3QkFLSixNQUFPLENBQUNDLE1BQU0sQ0FBRSxTQUFULENBQW9CQyxJQUFJLENBQUVILE1BQTFCLENBQVAsQ0FFQyxDQUFDLE1BQU9JLEdBQVAsQ0FBVyx5QkFDVCxNQUFPLENBQUVBLEdBQUcsQ0FBRUEsR0FBUCxDQUFZRixNQUFNLENBQUUsT0FBcEIsQ0FBUCxDQUNILENBQ0osQ0FYRCxDQWFBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbi8vIEZ1bmN0aW9uIHRvIGVuY29kZSBmaWxlIGRhdGEgdG8gYmFzZTY0IGVuY29kZWQgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IChmaWxlKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAvLyBSZWFkIGJpbmFyeSBkYXRhXG4gICAgY29uc3QgYml0bWFwID0gZnMucmVhZEZpbGVTeW5jKGZpbGUpO1xuICAgIC8vIENvbnZlcnQgYmluYXJ5IGRhdGEgdG8gYmFzZTY0IGVuY29kZWQgc3RyaW5nXG4gICAgY29uc3QgZmlsZTY0PSBiaXRtYXAudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgIHJldHVybiB7c3RhdHVzOiAnc3VjY2VzcycsIGRhdGE6IGZpbGU2NH07XG5cbiAgICB9IGNhdGNoIChlcnIpe1xuICAgICAgICByZXR1cm4geyBlcnI6IGVyciwgc3RhdHVzOiAnZXJyb3InIH07XG4gICAgfVxufVxuXG4vLyBUbyBkaXNwbGF5XG4vLzxpbWcgc3JjPXtgZGF0YTppbWFnZS9qcGVnO2Jhc2U2NCwke2RhdGF9YH0gLz4iXX0=