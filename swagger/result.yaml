openapi: 3.0.0
info:
  description: Result API
  version: "1.0.0"
  title: Result API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /result:
    get:
      summary: Get all Results
      operationId: getAllResults
      description: get all existantes Results
      parameters:
        - name: page
          in: query
          description: page number
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: number of elements
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: return all Results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: "#/components/schemas/Result"
                      totalDocs:
                        type: integer
                        format: int32
                      offset:
                        type: integer
                        format: int32
                      limit:
                        type: integer
                        format: int32
                      totalPages:
                        type: integer
                        format: int32
                      page:
                        type: integer
                        format: int32
                      pagingCounter:
                        type: integer
                        format: int32
                      hasPrevPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                      prevPage:
                        type: integer
                        format: int32
                      nextPage:
                        type: integer
                        format: int32
                  
        "400":
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required
    post:
      summary: adds a result
      operationId: addResult
      description: Add Result 
      responses:
        "201":
          description: Result created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Result'

        "400":
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  messsage:
                    type: string
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required

      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - host
                - result
                - client
                - task
              properties:
                host:
                  type: string
                  example: "24@55"
                result:
                  type: string
                  example: libelleExemple
                client:
                  type: string
                  example: "100"
                task:
                  type: string
                  example: "Boomi"
                files:
                  type: string
                  example: ["78778az444","11245788"]  
        description: Result item to add
  /result/{id}:   
    get:
      summary: Get One Result
      description: Get One Result by ID
      operationId: getOneResult
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: return Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Result'
        "400":
          description: error message        
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string  
                    example: No Result Can be found with this ID
    patch:
      summary: update Result
      description: update Result
      operationId: updateResult
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string

      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Result'

          description: "updated Result"
        "400":
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required
        "404":
          description: Result not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Result not found
        "501":
          description: "no error displayed"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: string
                  example: libelleExemple
                active:
                  type: string
                  example: true
  /result/previousResult/{id} :
    get:
      summary: Get Previous Result by task ID
      description: Get Previous Result by Task ID
      operationId: getPreviousResultByTaskID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: return the previous Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Result'
        "400":
          description: error message        
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string  
                    example: Noo Task Can be found with this ID.
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required
        "404":
          description: Result not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Result not found
        "501":
          description: "no error displayed"
components:
  schemas:
    Result:
      type: object
      required:
        - _id
        - host
        - result
        - task
        - createdAt
        - updatedAt
      properties:
        host:
          type: string
          example: "24@55"
        result:
          type: string
          example: libelleExemple
        createdAt:
          type: string
          example: "2020-05-05T14:00:00.000Z"
        updatedAt:
          type: string
          example: "2020-05-05T14:00:00.000Z"
        task:
          type: string
          example: "Boomi"

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Monitoring-app/result/1.0.0-oas3