openapi: 3.0.0
info:
  description: Type API
  version: "1.0.0"
  title: Type API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /type :
    get:
      summary: Get all type
      operationId: getAllType
      description: 
        get all existantes type in the system
      parameters:
        - name: page
          in: query
          description: page number
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: number of elements
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: return all type
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#/components/schemas/Type'
                      totalDocs:
                        type: integer
                        format: int32
                      offset:
                        type: integer
                        format: int32
                      limit:
                        type: integer
                        format: int32
                      totalPages:
                        type: integer
                        format: int32
                      page:
                        type: integer
                        format: int32
                      pagingCounter:
                        type: integer
                        format: int32
                      hasPrevPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                      prevPage:
                        type: integer
                        format: int32
                      nextPage:
                        type: integer
                        format: int32

        '400':
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                        
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required
    post:
      summary: adds a type
      operationId: addType
      description: Adds type to the system
      responses:
        '201':
          description: type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  type:
                    type: string
                    example: Jira
                  active:
                    type: boolean
                    example: true
                  
        '400':
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  messsage:
                    type: string
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required           
                   
      requestBody:
        content:
          application/json:
            schema: 
             type: object
             required:
             - type
             - active
             properties:
              type:
               type: string
               example: Jira
              active:
                type: boolean
        description: type item to add
  /sysclass/{id}:
    get:
      summary: get a type
      operationId: getOneType
      description: get type by Id
      parameters: 
      - in: path 
        name : id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: return specific type
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                        example: Jira
                      active:
                        type: boolean
                        example: true
        "400":
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  
                
                    
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required
        "404":
          description: type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: type not found       
    patch:
      summary: update a single type
      description: update one type
      operationId: updateType
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: string

      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
       
          description: "updated type"
        "400":
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: missing authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: authentification required
        "404":
          description: system class not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: type not found
        "501":
          description: "no error displayed"
        
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                 type: string
                 example: Jira
                active:
                 type: boolean
                 example: true
components:
  schemas:
    Type:
      type: object
      required:
        - id
        - type
        - active
      properties:
        id:
          type: string
          example: "60edffc2370e9734982cc555"
        type:
          type: string
          example: Jira
        active:
          type: boolean
          example: true
          
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/skander12354/Type/1.0.0